---
AWSTemplateFormatVersion: 2010-09-09
Resources:
  OIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - "${audience}"
      ThumbprintList:
        %{~ for thumbprint in thumbprints ~}
        - "${thumbprint}"
        %{~ endfor ~}
      Url: "https://${provider_domain}"
      Tags:
        - Key: created_by
          Value: cloudformation
  CIRoleProvisioner:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: created_by
          Value: cloudformation
      RoleName: ${platform}-ci-role-provisioner
      Description: ${platform} CI role provisioner for
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: !Ref OIDCProvider
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringLike:
                "${provider_domain}:sub":
                  %{~ for project_ref in trusted_projects_refs ~}
                  - "${project_ref}"
                  %{~ endfor ~}
              StringEquals:
                "${provider_domain}:aud": "${audience}"
      Policies:
        - PolicyName: iam-administrate # https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsidentityandaccessmanagement.html
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  # Roles
                  - "iam:CreateRole"
                  - "iam:GetRole"
                  - "iam:DeleteRole"
                  - "iam:UpdateRole"
                  - "iam:UpdateRoleDescription"
                  - "iam:UpdateAssumeRolePolicy"
                  # Inline Policies
                  - "iam:GetRolePolicy"
                  - "iam:DeleteRolePolicy"
                  - "iam:PutRolePolicy"
                  - "iam:ListRolePolicies"
                  # Managed Policies
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:GetPolicy"
                  - "iam:GetPolicyVersion"
                  - "iam:ListPolicies"
                  - "iam:ListAttachedRolePolicies"
                  # OIDC Provider
                  - "iam:GetOpenIDConnectProvider"
                  - "iam:ListOpenIDConnectProviders"
                  # Tags
                  - "iam:ListRoleTags"
                  - "iam:TagRole"
                  - "iam:UntagRole"
                Resource:
                  - !Sub "arn:aws:iam::$${AWS::AccountId}:role/${platform}-ci-*"
                  - !Sub "arn:aws:iam::$${AWS::AccountId}:oidc-provider/*"
                  # Account owned polices
                  - !Sub "arn:aws:iam::$${AWS::AccountId}:policy/*"
                  # AWS polices
                  - "arn:aws:iam::aws:policy/*"
        - PolicyName: terraform
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLogging"
                  - "s3:GetBucketPolicy"
                  - "s3:GetBucketPublicAccessBlock"
                  - "s3:GetBucketVersioning"
                  - "s3:GetEncryptionConfiguration"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:dynamodb:$${AWS::Region}:$${AWS::AccountId}:table/terraform-state-lock-$${AWS::AccountId}"
                  - !Sub "arn:aws:dynamodb:$${AWS::Region}:$${AWS::AccountId}:table/terraform-state-lock-$${AWS::AccountId}/*"
                  - !Sub "arn:aws:s3:::terraform-state-$${AWS::AccountId}"
                  - !Sub "arn:aws:s3:::terraform-state-$${AWS::AccountId}/*"
